name: 'Build and Test'
description: 'Builds and tests a Python Azure Function'
inputs:
  keyVaultUrl:
    description: 'The URL of the Azure Key Vault'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Install PowerShell Core
      run: |
        if ! command -v pwsh &> /dev/null
        then
          wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo add-apt-repository universe
          sudo apt-get install -y powershell
        fi
      shell: bash

    - name: Install Docker
      run: |
        sudo apt-get remove docker docker-engine docker.io containerd runc
        sudo apt-get update
        sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io
      shell: bash

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install requirements
      run: |
        cd azure_functions
        # pip3 install -r requirements-dev.txt
        # pip3 install -r requirements.txt
      shell: bash

    - name: Install Bandit
      run: |
        pip install bandit
      shell: bash

    - name: Run Bandit Checks
      run: |
        cd azure_functions
        export PYTHONPATH+=";$(pwd)"
        bandit -r function_app.py
        bandit -r src
        bandit -r tests --skip B101 # skip assert checks in the tests folder
      shell: bash

    - name: Install pycodestyle
      run: |
        pip install pycodestyle
      shell: bash

    - name: Run PyCodeStyle Checks
      run: |
        cd azure_functions
        export PYTHONPATH+=";$(pwd)"
        pycodestyle function_app.py --ignore=E501,W503,E203
        pycodestyle common --ignore=E501,W503,E203
        pycodestyle helpers --ignore=E501,W503,E203
        pycodestyle shared --ignore=E501,W503,E203
        pycodestyle tests --ignore=E501,W503,E203
      shell: bash

    - name: Install Coverage
      run: pip install coverage
      shell: bash
      
    - name: Install Behave
      run: pip install behave
      shell: bash
    - name: Install Azure SDK for Python
      run: |
        pip install azure-mgmt-compute
        pip install azure-mgmt-storage
        pip install azure-mgmt-resource
        pip install azure-keyvault-secrets
        pip install azure-storage-blob
      shell: bash

    - name: Install azure-identity package
      run: pip install azure-identity
      shell: bash
      
    - name: Install azure-ai-textanalytics package
      run: pip install azure-ai-textanalytics
      shell: bash

    - name: Install azure-ai-formrecognizer package
      run: pip install azure-ai-formrecognizer
      shell: bash

    - name: Install azure-ai-language package if needed
      run: pip install azure-ai-language
      shell: bash
    
    - name: Run Unit Tests and Code Coverage
      run: |
        cd azure_functions
        export PYTHONPATH+=";$(pwd)"
        export KEY_VAULT_URL="${{ inputs.keyVaultUrl }}"
        export FUNCTION_APP_KEY_NAME="function-app-key"
        coverage run --rcfile=.coveragerc -m behave tests --junit --junit-directory ./reports/tabular
        coverage xml -o ./coverage.xml
        coverage report
      shell: bash

    - name: Display Test Results
      run: cat ./reports/**/TESTS-*.xml
      shell: bash

    - name: Display Code Coverage
      run: cat ./coverage.xml
      shell: bash
